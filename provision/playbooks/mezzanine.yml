- name: Install Mezzanine
  hosts:
    - class_cms
  gather_facts: false
  vars_files:
    - constants/aws.yml
    - constants/controller.yml
 
  pre_tasks:
      
    - name: 'Controller host configuration'
      ansible.builtin.debug:
        msg:
        - "domain: {{ aws_instance_dns_domain }}"
        - "ssh port: {{ ansible_port }}"
        - "ssh user: {{ ansible_user }}"
        - "ssh key: {{ ansible_private_key_file }}"
  
    - name: Upgrade all packages
      ansible.builtin.yum: name=* state=latest 
                 
    - name: Create download directory
      ansible.builtin.file:
        path: "{{ aws.instance.download.path }}"
        state: directory
        owner: "{{ aws.instance.user }}"
        group: "{{ aws.instance.user }}"
        mode: 488         
 
  tasks:
        
    - name: Create virtualenv
      ansible.builtin.pip:
        name:
          - pip
          - wheel
          - setuptools
        state: latest
        virtualenv: "{{ cms.project.venv.path }}"
        virtualenv_command: "{{ python_path }}/{{ python_executable }} -m venv"   

    - name: Upload Mezzanine requirements.txt
      copy:
        src: mezzanine/requirements.txt
        dest: "{{ aws.instance.download.path }}"
        mode: '0644'

    - name: Install packages listed in requirements.txt
      ansible.builtin.pip:
        virtualenv: "{{ cms.project.venv.path }}"
        requirements: "{{ aws.instance.download.path }}/requirements.txt"

    - name: Create a logs directory
      become: false
      ansible.builtin.file:
        path: "{{ cms.project.logs.path }}"
        state: directory
        mode: 0755
                
    - name: Create project directory
      become: false
      ansible.builtin.file:
        path: "{{ cms.project.path }}"
        state: directory
        mode: 0755  
        
    - name: Check out the repository on the host (with agent forwarding)
      become: false
      ansible.builtin.git:
        repo: "{{ cms.project.repository.url }}"
        dest: "{{ cms.project.path }}"
        version: master
        accept_hostkey: true
        update: false               
        

  post_tasks:
  
    - name: Delete download directory
      ansible.builtin.file:
        path: "{{ aws.instance.download.path }}"
        state: absent          